[pytest]
testpaths = tests

markers =
    # General
    polarion: Store polarion test ID
    jira: Jira ticket ID
    incremental: Mark tests as incremental
    last: Run the test last
    first: Run the test first
    order: Configure test order
    early: Run fixtures early
    redhat_internal_dependency: Tests which have a dependency on an RedHat internal resource
    # Data collection markers
    skip_must_gather_collection: skip must gather collection on failures
    gpu: indicates collecting relevant namespace data on failure
    swap: indicates collecting relevant namespace data on failure
    # Test types
    destructive: Destructive tests
    sap_hana: SAP HANA tests
    ovs_brcnv: Test functionality of existing ovs bridge with primary, secondary node ifaces
    scale: Scale tests
    longevity: Longevity (continuous) tests
    ipv4: IPV4 based test
    ipv6: IPV6 based test
    node_remediation: Destructive Node Remediation using NodeHealthCheck with SNR
    node_remediation_ipmi_enabled: Destructive NodeHealthCheck with SNR/FAR on IPMI-enabled clusters
    special_infra: tests that requires special infrastructure. e.g. sriov, gpu etc.
    dpdk: Tests that requires dpdk
    swap: tests that require SWAP active on nodes
    high_resource_vm: tests using VM requirening a lot of resources (like Windows OS VMs, hight performance VMs, etc)
    gpu: tests that require cluster with gpu
    cpu_manager: tests that require cpu manager on nodes
    numa: tests that require numa configured on nodes
    sriov: tests that require sriov net-cards on nodes
    hugepages: tests that require nodes with hugepages
    service_mesh: tests that require the service mesh operator to be installed
    jumbo_frame: tests that require network configurations supporting jumbo frames
    # CI
    smoke: Mark tests as smoke tests
    ci: Mark tests as CI tests
    tier2: Mark tests as tier2
    tier3: Mark tests as tier3
    ocp_interop: Interop testing with openshift
    ibm_bare_metal: IBM BM tests
    gating: Mark tier2 tests that are part of gating job
    # Install and upgrade
    install: Tests that self-manage HCO/CNV installation
    upgrade: Run regular upgrade lanes with default configuration
    upgrade_custom: Run custom upgrade lanes with non-default configuration (e.g. with hco featuregates customized)
    product_upgrade_test: Marks product upgrade tests
    post_upgrade: Marks tests which should be executed after upgrade
    cnv_upgrade: Mark cnv upgrade test
    ocp_upgrade: Mark ocp upgrade test
    eus_upgrade: Mark EUS-to-EUS upgrade test
    # Teams
    chaos: Chaos tests
    virt: Virt tests
    network: Network tests
    storage: storage tests
    iuo: install upgrade operators
    observability: metrics and alerts tests
    sno: SingleNodeOpenShift tests
    infrastructure: Infrastructure tests
    data_protection: Data Protection tests
    # cluster_health_check
    cluster_health_check: cluster health check tests
    ## Architecture support
    arm64: Tests that can run on ARM-based cluster
    x86_64: Tests that can run on x86_64-based cluster
    s390x: Tests that can run on s390x-based cluster

addopts =
    -p no:logging
    --basetemp=/tmp/pytest
    --strict-markers
    --tc-file=tests/global_config.py
    --tc-format=python
    --show-progress
    --order-dependencies
    --indulgent-ordering
